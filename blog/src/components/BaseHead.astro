---
import { SITE_TITLE, SITE_DESCRIPTION, SITE_URL } from '../consts';

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  canonicalURL?: string | URL;
  keywords?: string | string[];
  ogType?: string;
  lang?: string;
  video?: {
    url: string;
    name: string;
    description?: string;
    uploadDate?: string;
    duration?: string;
    thumbnailUrl?: string;
  };
}

const {
  title = SITE_TITLE,
  description = SITE_DESCRIPTION,
  image = '/og-image.png',
  canonicalURL = new URL(Astro.url.pathname, SITE_URL),
  keywords = `${title}, Aptos, aptcore.one`,
  ogType = Astro.props.video ? 'video.other' : 'website',
  lang = 'en',
  video
} = Astro.props;

const base = import.meta.env.BASE_URL.replace(/\/$/, '');
const socialImageURL = image.startsWith('http')
  ? image
  : new URL(`${base}${image.startsWith('/') ? '' : '/'}${image}`, SITE_URL).href;
---
<title>{title}</title>
<meta name="description" content={description} />
<meta name="keywords" content={Array.isArray(keywords) ? keywords.join(', ') : keywords} />
<link rel="canonical" href={canonicalURL.toString()} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={socialImageURL} />
<meta property="og:url" content={canonicalURL.toString()} />
<meta property="og:type" content={ogType} />
<meta name="twitter:card" content={video ? 'player' : 'summary_large_image'} />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={socialImageURL} />
<link rel="icon" href={`${base}/favicon.ico`} sizes="any" />
<link rel="icon" type="image/svg+xml" href={`${base}/favicon.svg`} />
<link rel="apple-touch-icon" href={`${base}/apple-touch-icon.png`} />