---
// src/components/Header.astro
import { PATHS } from '../consts';

const navLinks = [
  { label: "Help", href: PATHS.help }
];

const mobileNavLinks = [
  { label: "Launch App", href: PATHS.home },
  { label: "Blog", href: PATHS.blog },
  { label: "Help", href: PATHS.help },
  { label: "About", href: PATHS.about },
  { label: "Contact", href: PATHS.contact },
];

const currentPath = Astro.url.pathname;
---
<header class="relative w-full backdrop-blur-xl bg-black/5 border-b border-white/10 px-4 sm:px-6 py-2.5 flex justify-between items-center sticky top-0 z-50">
  
  <div class="flex items-center">
    <a href={PATHS.home} class="flex items-center focus:outline-none focus:ring-2 focus:ring-purple-400 rounded-md p-1 -ml-1 shrink-0" aria-label="aptcore.one homepage">
      <h1 class="text-2xl sm:text-3xl font-bold tracking-tight inline-flex items-baseline bg-gradient-to-r from-[#2196f3] via-[#7b61ff] to-[#b44aff] bg-clip-text text-transparent">
        <span>aptcore</span>
        <img src={`${import.meta.env.BASE_URL}/aptcore-logo.svg`} alt="" class="h-5 w-5 mx-1" aria-hidden="true" width="20" height="20" />
        <span>one</span>
      </h1>
    </a>
    
    <nav class="hidden md:flex items-center gap-x-1 sm:gap-x-2 ml-6 lg:ml-10" aria-label="Main navigation">
      {navLinks.map(({ label, href }) => (
        <a href={href} class:list={[
          "text-sm font-medium transition-colors px-2.5 py-1.5 rounded-md",
          currentPath.startsWith(href) ? "text-purple-400" : "text-zinc-300 hover:text-purple-400"
        ]}>
          {label}
        </a>
      ))}
    </nav>
  </div>

  <div class="flex items-center">
    <a href={PATHS.home} class="hidden md:flex group items-center gap-x-3 px-5 py-2.5 bg-zinc-800/50 rounded-xl border border-white/10 text-sm font-semibold text-zinc-100 shadow-lg shadow-black/20 hover:bg-zinc-800/80 hover:border-white/20 transition-all duration-200">
      Launch App
    </a>

    <div class="md:hidden ml-2 sm:ml-3">
      <button id="mobile-menu-toggle" class="text-zinc-300 hover:text-purple-400 p-1.5 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-400 flex items-center justify-center h-8 w-8" aria-label="Open menu" aria-expanded="false" aria-controls="mobile-menu-content">
        <svg id="menu-open-icon" class="w-5 h-5 block" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path></svg>
        <svg id="menu-close-icon" class="w-5 h-5 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
      </button>
    </div>
  </div>

  <div id="mobile-menu-content" class="hidden absolute top-full left-0 right-0 md:hidden bg-zinc-900/95 backdrop-blur-lg shadow-xl border-t border-white/10 rounded-b-lg">
    <nav class="flex flex-col px-4 py-4 space-y-1.5">
        {mobileNavLinks.map(({ label, href }) => (
            <a href={href} class="block text-left text-base font-medium text-zinc-200 hover:bg-purple-500/20 hover:text-purple-300 py-2.5 px-3 rounded-md transition-colors">
                {label}
            </a>
        ))}
    </nav>
  </div>
</header>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const toggleButton = document.getElementById('mobile-menu-toggle');
        const mobileMenu = document.getElementById('mobile-menu-content');
        const openIcon = document.getElementById('menu-open-icon');
        const closeIcon = document.getElementById('menu-close-icon');

        if (toggleButton && mobileMenu && openIcon && closeIcon) {
            toggleButton.addEventListener('click', () => {
                mobileMenu.classList.toggle('hidden');
                openIcon.classList.toggle('hidden');
                closeIcon.classList.toggle('hidden');
                const isExpanded = toggleButton.getAttribute('aria-expanded') === 'true';
                toggleButton.setAttribute('aria-expanded', String(!isExpanded));
            });
        }
    });
</script>